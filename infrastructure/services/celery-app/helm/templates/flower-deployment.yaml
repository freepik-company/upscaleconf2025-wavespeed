{{- if .Values.celery.flower.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "celery-app.fullname" . }}-flower
  labels:
    {{- include "celery-app.labels" . | nindent 4 }}
    component: flower
spec:
  replicas: {{ .Values.celery.flower.replicas }}
  selector:
    matchLabels:
      {{- include "celery-app.selectorLabels" . | nindent 6 }}
      component: flower
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "celery-app.selectorLabels" . | nindent 8 }}
        component: flower
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "celery-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-flower
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["python"]
          args: ["-m", "src.flower_server"]
          ports:
            - name: http
              containerPort: {{ .Values.celery.flower.port }}
              protocol: TCP
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "celery-app.fullname" . }}-flower
  labels:
    {{- include "celery-app.labels" . | nindent 4 }}
    component: flower
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.celery.flower.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "celery-app.selectorLabels" . | nindent 4 }}
    component: flower
---
{{- if .Values.celery.flower.ingress.enabled -}}
{{- $fullName := printf "%s-flower" (include "celery-app.fullname" .) -}}
{{- $svcPort := .Values.celery.flower.port -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "celery-app.labels" . | nindent 4 }}
  {{- with .Values.celery.flower.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.celery.flower.ingress.className }}
  ingressClassName: {{ .Values.celery.flower.ingress.className }}
  {{- end }}
  {{- if .Values.celery.flower.ingress.tls }}
  tls:
    {{- range .Values.celery.flower.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.celery.flower.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
          {{- end }}
    {{- end }}
{{- end }}
{{- end }} 