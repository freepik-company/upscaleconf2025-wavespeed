apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "inference-balancer.fullname" . }}-flux-a-config
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "inference-balancer.labels" . | nindent 4 }}
    app.kubernetes.io/component: flux-a
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
                        
        log_format timing_details '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time" '
                        'upstream_addr="$upstream_addr" upstream_status="$upstream_status"';

        access_log /var/log/nginx/access.log timing_details;

        sendfile on;
        keepalive_timeout 65;

        server {
            listen 80;
            server_name _;

            location / {
                add_header Content-Type text/plain;
                return 200 "This is Flux Service A\n";
            }

            # Health check endpoint
            location /health {
                add_header Content-Type text/plain;
                return 200 "OK\n";
            }
            
            # Metrics endpoint for Prometheus
            location = /metrics {
                stub_status on;
                access_log off;
                allow 127.0.0.1;
                allow 10.0.0.0/8;  # Kubernetes cluster internal network
                allow 172.16.0.0/12;  # Additional Kubernetes CIDR range
                allow 192.168.0.0/16; # Additional Kubernetes CIDR range
                deny all;
            }
        }
    } 