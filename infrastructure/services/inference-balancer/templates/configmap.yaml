apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "inference-balancer.fullname" . }}-nginx-config
  labels:
    {{- include "inference-balancer.labels" . | nindent 4 }}
data:
  nginx.conf: |-
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        keepalive_timeout  65;

        # Upstream for flux services with weighted load balancing
        upstream flux-production {
            server inference-balancer-proxy-a.inference-balancer.svc.cluster.local:80 weight=99 max_conns=0 max_fails=2 fail_timeout=60;
            server inference-balancer-proxy-b.inference-balancer.svc.cluster.local:80 weight=1 max_conns=0 max_fails=2 fail_timeout=60;
        }

        server {
            listen       80;
            server_name  localhost;

            location / {
                root   /usr/share/nginx/html;
                index  index.html index.htm;
            }

            # Route /flux with load balancing
            location = /flux {
                proxy_set_header Host                   $host;

                # Pass Real IP
                proxy_set_header X-Real-IP              $remote_addr;

                proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Host       $host;
                proxy_set_header X-Forwarded-Port       $server_port;
                
                # Set custom request ID if not present
                set $custom_request_id $request_id;
                proxy_set_header X-Request-Id           $custom_request_id;

                # mitigate HTTPoxy Vulnerability
                proxy_set_header Proxy                  "";

                proxy_connect_timeout                   10m;
                proxy_send_timeout                      10m;
                proxy_read_timeout                      10m;

                proxy_redirect                          off;
                proxy_buffering                         off;

                proxy_http_version                      1.1;

                proxy_pass http://flux-production/flux;
            }

            # Health check endpoint
            location /health {
                return 200;
            }

            error_page   500 502 503 504  /50x.html;
            location = /50x.html {
                root   /usr/share/nginx/html;
            }
        }
    }